### YamlMime:JavaMember
uid: "com.azure.storage.file.share.implementation.DirectoriesImpl.renameWithResponseAsync*"
fullName: "com.azure.storage.file.share.implementation.DirectoriesImpl.renameWithResponseAsync"
name: "renameWithResponseAsync"
nameWithType: "DirectoriesImpl.renameWithResponseAsync"
members:
- uid: "com.azure.storage.file.share.implementation.DirectoriesImpl.renameWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.implementation.models.SourceLeaseAccessConditions,com.azure.storage.file.share.implementation.models.DestinationLeaseAccessConditions,com.azure.storage.file.share.implementation.models.CopyFileSmbInfo,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.implementation.DirectoriesImpl.renameWithResponseAsync(String shareName, String directory, String renameSource, Integer timeout, Boolean replaceIfExists, Boolean ignoreReadOnly, String filePermission, String filePermissionKey, Map<String,String> metadata, SourceLeaseAccessConditions sourceLeaseAccessConditions, DestinationLeaseAccessConditions destinationLeaseAccessConditions, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  name: "renameWithResponseAsync(String shareName, String directory, String renameSource, Integer timeout, Boolean replaceIfExists, Boolean ignoreReadOnly, String filePermission, String filePermissionKey, Map<String,String> metadata, SourceLeaseAccessConditions sourceLeaseAccessConditions, DestinationLeaseAccessConditions destinationLeaseAccessConditions, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  nameWithType: "DirectoriesImpl.renameWithResponseAsync(String shareName, String directory, String renameSource, Integer timeout, Boolean replaceIfExists, Boolean ignoreReadOnly, String filePermission, String filePermissionKey, Map<String,String> metadata, SourceLeaseAccessConditions sourceLeaseAccessConditions, DestinationLeaseAccessConditions destinationLeaseAccessConditions, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  summary: "Renames a directory."
  parameters:
  - description: "The name of the target share."
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path of the target directory."
    name: "directory"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Required. Specifies the URI-style path of the source file, up to 2 KB in length."
    name: "renameSource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a\n     href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting\n     Timeouts for File Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. A boolean value for if the destination file already exists, whether this request\n     will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If\n     not provided or if false and the destination file does exist, the request will not overwrite the destination\n     file. If provided and the destination file doesn\\u2019t exist, the rename will succeed. Note: This value does not\n     override the x-ms-file-copy-ignore-read-only header value."
    name: "replaceIfExists"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Optional. A boolean value that specifies whether the ReadOnly attribute on a preexisting\n     destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the\n     destination with the ReadOnly attribute set will cause the rename to fail."
    name: "ignoreReadOnly"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "If specified the permission (security descriptor) shall be set for the directory/file. This\n     header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used.\n     Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of\n     the x-ms-file-permission or x-ms-file-permission-key should be specified."
    name: "filePermission"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Key of the permission to be set for the directory/file. Note: Only one of the\n     x-ms-file-permission or x-ms-file-permission-key should be specified."
    name: "filePermissionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A name-value pair to associate with a file storage object."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Parameter group."
    name: "sourceLeaseAccessConditions"
    type: "<xref href=\"com.azure.storage.file.share.implementation.models.SourceLeaseAccessConditions?alt=com.azure.storage.file.share.implementation.models.SourceLeaseAccessConditions&text=SourceLeaseAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter group."
    name: "destinationLeaseAccessConditions"
    type: "<xref href=\"com.azure.storage.file.share.implementation.models.DestinationLeaseAccessConditions?alt=com.azure.storage.file.share.implementation.models.DestinationLeaseAccessConditions&text=DestinationLeaseAccessConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameter group."
    name: "copyFileSmbInfo"
    type: "<xref href=\"com.azure.storage.file.share.implementation.models.CopyFileSmbInfo?alt=com.azure.storage.file.share.implementation.models.CopyFileSmbInfo&text=CopyFileSmbInfo\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DirectoriesRenameResponse> renameWithResponseAsync(String shareName, String directory, String renameSource, Integer timeout, Boolean replaceIfExists, Boolean ignoreReadOnly, String filePermission, String filePermissionKey, Map<String,String> metadata, SourceLeaseAccessConditions sourceLeaseAccessConditions, DestinationLeaseAccessConditions destinationLeaseAccessConditions, CopyFileSmbInfo copyFileSmbInfo, Context context)"
  returns:
    description: "the completion."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.implementation.models.DirectoriesRenameResponse?alt=com.azure.storage.file.share.implementation.models.DirectoriesRenameResponse&text=DirectoriesRenameResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share.implementation"
artifact: com.azure:azure-storage-file-share:12.12.0
