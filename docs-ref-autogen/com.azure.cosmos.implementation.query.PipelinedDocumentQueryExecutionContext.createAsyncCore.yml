### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext.createAsyncCore*"
fullName: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext<T>.<T>createAsyncCore"
name: "<T>createAsyncCore"
nameWithType: "PipelinedDocumentQueryExecutionContext<T>.<T>createAsyncCore"
members:
- uid: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext.<T>createAsyncCore(com.azure.cosmos.implementation.DiagnosticsClientContext,com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams<T>,int,java.util.function.Function<com.fasterxml.jackson.databind.JsonNode,T>)"
  fullName: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext<T>.<T>createAsyncCore(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, PipelinedDocumentQueryParams<T> initParams, int pageSize, Function<JsonNode,T> factoryMethod)"
  name: "<T>createAsyncCore(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, PipelinedDocumentQueryParams<T> initParams, int pageSize, Function<JsonNode,T> factoryMethod)"
  nameWithType: "PipelinedDocumentQueryExecutionContext<T>.<T>createAsyncCore(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, PipelinedDocumentQueryParams<T> initParams, int pageSize, Function<JsonNode,T> factoryMethod)"
  parameters:
  - name: "diagnosticsClientContext"
    type: "<xref href=\"com.azure.cosmos.implementation.DiagnosticsClientContext?alt=com.azure.cosmos.implementation.DiagnosticsClientContext&text=DiagnosticsClientContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "client"
    type: "<xref href=\"com.azure.cosmos.implementation.query.IDocumentQueryClient?alt=com.azure.cosmos.implementation.query.IDocumentQueryClient&text=IDocumentQueryClient\" data-throw-if-not-resolved=\"False\" />"
  - name: "initParams"
    type: "<xref href=\"com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams?alt=com.azure.cosmos.implementation.query.PipelinedDocumentQueryParams&text=PipelinedDocumentQueryParams\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "factoryMethod"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected static Flux<PipelinedQueryExecutionContextBase<T>> <T>createAsyncCore(DiagnosticsClientContext diagnosticsClientContext, IDocumentQueryClient client, PipelinedDocumentQueryParams<T> initParams, int pageSize, Function<JsonNode,T> factoryMethod)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.query.PipelinedQueryExecutionContextBase?alt=com.azure.cosmos.implementation.query.PipelinedQueryExecutionContextBase&text=PipelinedQueryExecutionContextBase\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.28.0
