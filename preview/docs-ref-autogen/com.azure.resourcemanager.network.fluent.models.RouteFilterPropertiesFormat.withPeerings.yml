### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat.withPeerings*"
fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat.withPeerings"
name: "withPeerings"
nameWithType: "RouteFilterPropertiesFormat.withPeerings"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat.withPeerings(java.util.List<com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  name: "withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  nameWithType: "RouteFilterPropertiesFormat.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  summary: "Set the peerings property: A collection of references to express route circuit peerings."
  parameters:
  - description: "the peerings value to set."
    name: "peerings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RouteFilterPropertiesFormat withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  returns:
    description: "the RouteFilterPropertiesFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat?alt=com.azure.resourcemanager.network.fluent.models.RouteFilterPropertiesFormat&text=RouteFilterPropertiesFormat\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:1.0.0-hybridbeta.1
