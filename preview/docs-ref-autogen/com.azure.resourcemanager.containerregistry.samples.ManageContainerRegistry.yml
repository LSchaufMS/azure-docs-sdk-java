### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerregistry.samples.ManageContainerRegistry"
fullName: "com.azure.resourcemanager.containerregistry.samples.ManageContainerRegistry"
name: "ManageContainerRegistry"
nameWithType: "ManageContainerRegistry"
summary: "Azure Container Registry sample for managing container registry. - Create an Azure Container Registry to be used for holding the Docker images - If a local Docker engine cannot be found, create a Linux virtual machine that will host a Docker engine to be used for this sample - Use Docker Java to create a Docker client that will push/pull an image to/from Azure Container Registry - Pull a test image from the public Docker repo (hello-world:latest) to be used as a sample for pushing/pulling to/from an Azure Container Registry - Create a new Docker container from an image that was pulled from Azure Container Registry"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ManageContainerRegistry"
constructors:
- "com.azure.resourcemanager.containerregistry.samples.ManageContainerRegistry.ManageContainerRegistry()"
methods:
- "com.azure.resourcemanager.containerregistry.samples.ManageContainerRegistry.main(java.lang.String[])"
- "com.azure.resourcemanager.containerregistry.samples.ManageContainerRegistry.runSample(com.azure.resourcemanager.AzureResourceManager)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.containerregistry.samples"
artifact: com.azure.resourcemanager:azure-resourcemanager-samples:2.0.0-alpha.20211130.3
