### YamlMime:JavaMember
uid: "com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl.withExistingDnsResolver*"
fullName: "com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl.withExistingDnsResolver"
name: "withExistingDnsResolver"
nameWithType: "InboundEndpointImpl.withExistingDnsResolver"
members:
- uid: "com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl.withExistingDnsResolver(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl.withExistingDnsResolver(String resourceGroupName, String dnsResolverName)"
  name: "withExistingDnsResolver(String resourceGroupName, String dnsResolverName)"
  nameWithType: "InboundEndpointImpl.withExistingDnsResolver(String resourceGroupName, String dnsResolverName)"
  summary: "Specifies resourceGroupName, dnsResolverName."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "dnsResolverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InboundEndpointImpl withExistingDnsResolver(String resourceGroupName, String dnsResolverName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl?alt=com.azure.resourcemanager.dnsresolver.implementation.InboundEndpointImpl&text=InboundEndpointImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.dnsresolver.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-dnsresolver:1.0.0-beta.1
