### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync*"
fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync"
name: "getAvailableStacksAsync"
nameWithType: "ProvidersClient.getAvailableStacksAsync"
members:
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync()"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync()"
  name: "getAvailableStacksAsync()"
  nameWithType: "ProvidersClient.getAvailableStacksAsync()"
  summary: "Get available application frameworks and their versions."
  syntax: "public abstract PagedFlux<ApplicationStackInner> getAvailableStacksAsync()"
  returns:
    description: "available application frameworks and their versions."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackInner&text=ApplicationStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync(com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected)"
  fullName: "com.azure.resourcemanager.appservice.fluent.ProvidersClient.getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  name: "getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  nameWithType: "ProvidersClient.getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  summary: "Get available application frameworks and their versions."
  parameters:
  - description: "The osTypeSelected parameter."
    name: "osTypeSelected"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected?alt=com.azure.resourcemanager.appservice.models.ProviderOsTypeSelected&text=ProviderOsTypeSelected\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<ApplicationStackInner> getAvailableStacksAsync(ProviderOsTypeSelected osTypeSelected)"
  returns:
    description: "available application frameworks and their versions."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.ApplicationStackInner?alt=com.azure.resourcemanager.appservice.fluent.models.ApplicationStackInner&text=ApplicationStackInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:1.0.0-hybridbeta.1
