### YamlMime:JavaMember
uid: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess*"
fullName: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess"
name: "withAllowVirtualNetworkAccess"
nameWithType: "VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess"
members:
- uid: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  name: "withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  nameWithType: "VirtualNetworkPeeringPropertiesFormat.withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  summary: "Set the allowVirtualNetworkAccess property: Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space."
  parameters:
  - description: "the allowVirtualNetworkAccess value to set."
    name: "allowVirtualNetworkAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualNetworkPeeringPropertiesFormat withAllowVirtualNetworkAccess(Boolean allowVirtualNetworkAccess)"
  returns:
    description: "the VirtualNetworkPeeringPropertiesFormat object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat?alt=com.azure.resourcemanager.network.fluent.models.VirtualNetworkPeeringPropertiesFormat&text=VirtualNetworkPeeringPropertiesFormat\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:1.0.0-hybridbeta.1
