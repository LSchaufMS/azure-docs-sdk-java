### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.samples.ManageSqlImportExportDatabase"
fullName: "com.azure.resourcemanager.sql.samples.ManageSqlImportExportDatabase"
name: "ManageSqlImportExportDatabase"
nameWithType: "ManageSqlImportExportDatabase"
summary: "Azure SQL sample for managing import/export SQL Database - - Create a SQL Server with one database from a pre-existing sample. - Create a storage account and export a database - Create a new database from a backup using the import functionality - Update an empty database with a backup database using the import functionality - Delete storage account, databases and SQL Server"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ManageSqlImportExportDatabase"
constructors:
- "com.azure.resourcemanager.sql.samples.ManageSqlImportExportDatabase.ManageSqlImportExportDatabase()"
methods:
- "com.azure.resourcemanager.sql.samples.ManageSqlImportExportDatabase.main(java.lang.String[])"
- "com.azure.resourcemanager.sql.samples.ManageSqlImportExportDatabase.runSample(com.azure.resourcemanager.AzureResourceManager)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.sql.samples"
artifact: com.azure.resourcemanager:azure-resourcemanager-samples:2.0.0-alpha.20211130.3
